# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, SmartCash
# This file is distributed under the same license as the SmartCash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
# Translators:
# hoangton <smartcashvietnam@gmail.com>, 2019
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SmartCash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-07 13:34+0700\n"
"PO-Revision-Date: 2019-01-16 11:33+0000\n"
"Last-Translator: hoangton <smartcashvietnam@gmail.com>, 2019\n"
"Language: vi\n"
"Language-Team: Vietnamese "
"(https://www.transifex.com/smartcash/teams/95224/vi/)\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../merchants/technical.rst:1
msgid "Technical guides for merchants using SmartCash. API and SDK resources."
msgstr ""

#: ../../merchants/technical.rst:1
msgid ""
"smartcash, merchants, payment processor, API, SDK, insight, instantpay, "
"vending machines"
msgstr ""

#: ../../merchants/technical.rst:9
msgid "Technical Guides"
msgstr "Hướng dẫn kỹ thuật"

#: ../../merchants/technical.rst:12
msgid "SmartCash Wallet Integration"
msgstr "Tích hợp ví SmartCash"

#: ../../merchants/technical.rst:14
msgid ""
"`SmartCash NodeClient <https://github.com/SmartCash/Core-"
"Smart/releases/>`__ is a fork of Bitcoin and the majority of "
"functionality included in the SmartCash NodeClient Daemon can be "
"integrated in a similar manner. Key differences relate to customizations "
"to existing JSON-RPC commands to support unique functionalities such as "
"InstantPay. These differences, as well as more general information, are "
"summarized below."
msgstr ""

#: ../../merchants/technical.rst:21
msgid ""
"**General Information:** SmartCash is a “Proof of Work” blockchain with "
"attributes similar to that of Bitcoin."
msgstr ""

#: ../../merchants/technical.rst:24
msgid "Block Time: ~55 seconds per Block"
msgstr ""

#: ../../merchants/technical.rst:25
msgid "Blockchain Confirmations: 6 Confirmations (or 2 in the case of InstantPay)"
msgstr ""

#: ../../merchants/technical.rst:27
msgid "Github Source: https://github.com/SmartCash/Core-Smart"
msgstr ""

#: ../../merchants/technical.rst:28
msgid "Release Link: https://github.com/SmartCash/Core-Smart/releases/"
msgstr ""

#: ../../merchants/technical.rst:30
msgid ""
"**JSON-RPC Interface:** The majority of Bitcoin JSON-RPC commands are "
"unchanged making integration into existing systems relatively "
"straightforward. For a complete listing of RPC commands see the `command-"
"line options "
"<https://smartcash.freshdesk.com/support/solutions/articles/35000027145>`__."
msgstr ""

#: ../../merchants/technical.rst:35
msgid ""
"It’s worth noting that several key Transaction-related JSON-RPC commands "
"have been modified to support InstantPay."
msgstr ""

#: ../../merchants/technical.rst:38
msgid ""
"**Block Hashing Algorithm:** SmartCash uses the “keccak” algorithm in "
"place of SHA256 used in Bitcoin. It’s important to note, however, that "
"this only affects the hashing of the Block itself. All other internals "
"utilize SHA256 hashes (transactions, merkle root, etc) which allows for "
"most existing libraries to work in the SmartCash ecosystem."
msgstr ""

#: ../../merchants/technical.rst:44
msgid ""
"**Supporting Libraries:** Due to the aforementioned differences in "
"Hashing Algorithm only minor adjustments are required before using "
"Bitcoin libraries on the SmartCash network. The most popular libraries "
"have already been ported to SmartCash which has enabled support for most "
"major programming languages. These resources are outlined in the "
":ref:`SDK Resources <sdk-resources>` section of this document."
msgstr ""

#: ../../merchants/technical.rst:54
msgid "Integration Notes"
msgstr ""

#: ../../merchants/technical.rst:59
msgid "API Services"
msgstr ""

#: ../../merchants/technical.rst:61
msgid ""
"Several API services exist to facilitate quick and easy integration with "
"the SmartCash network for services including:"
msgstr ""

#: ../../merchants/technical.rst:64
msgid "Transaction broadcasting"
msgstr ""

#: ../../merchants/technical.rst:65
msgid "Exchange rates"
msgstr ""

#: ../../merchants/technical.rst:66
msgid "Currency conversion"
msgstr ""

#: ../../merchants/technical.rst:67
msgid "Invoice generation"
msgstr ""

#: ../../merchants/technical.rst:69
msgid ""
"API Services are typically leveraged to eliminate that requirement of "
"running your own infrastructure to support blockchain interactions. This "
"includes mechanisms such as:"
msgstr ""

#: ../../merchants/technical.rst:73
msgid "Forming and Broadcasting a Transaction to the network."
msgstr ""

#: ../../merchants/technical.rst:74
msgid "Address generation using HD Wallets."
msgstr ""

#: ../../merchants/technical.rst:75
msgid "Payment Processing using WebHooks."
msgstr ""

#: ../../merchants/technical.rst:77
msgid ""
"There are a variety of options for supporting these methods, with the key"
" differentiator being the pricing model included and supported features. "
"The following list of API Providers attempts to outline these key "
"features/differentiators and also includes a link to related "
"documentation."
msgstr ""

#: ../../merchants/technical.rst:85
msgid "Insight"
msgstr ""

#: ../../merchants/technical.rst:87
msgid ""
"https://insight.smartcash.cc/api https://github.com/SmartCash/smart-"
"insight-api"
msgstr ""

#: ../../merchants/technical.rst:90
msgid ""
"The open-source Insight REST API provides you with a convenient, powerful"
" and simple way to read data from the SmartCash network and build your "
"own services with it. A practical guide to getting started with the "
"Insight API and Insight UI block explorer is available :ref:`here "
"<insight-api>`."
msgstr ""

#: ../../merchants/technical.rst:96
msgid "Features: Transaction Broadcast, WebSocket Notifications."
msgstr ""

#: ../../merchants/technical.rst:97
msgid "Pricing Model: Free / Open Source"
msgstr ""

#: ../../merchants/technical.rst:98
msgid "Documentation: https://github.com/bitpay/insight-api"
msgstr ""

#: ../../merchants/technical.rst:103
msgid "CoinPayments"
msgstr ""

#: ../../merchants/technical.rst:110
msgid "https://www.coinpayments.net"
msgstr ""

#: ../../merchants/technical.rst:112
msgid ""
"CoinPayments is an integrated payment gateway for cryptocurrencies such "
"as SmartCash. Shopping cart plugins are available for all popular "
"webcarts used today. CoinPayments can help you set up a new checkout, or "
"integrate with your pre-existing checkout."
msgstr ""

#: ../../merchants/technical.rst:117
msgid ""
"Features: Invoicing, Exchange Rates, WebHook Callbacks. CoinPayments "
"holds Private Keys on their server allowing merchant to withdraw funds in"
" Cryptocurrency or convert to Fiat."
msgstr ""

#: ../../merchants/technical.rst:120
msgid ""
"Integrations: aMember Pro, Arastta, Blesta, BoxBilling, Drupal, Ecwid, "
"Hikashop, Magento, OpenCart, OSCommerce, PrestaShop, Tomato Cart, "
"WooCommerce, Ubercart, XCart, ZenCart"
msgstr ""

#: ../../merchants/technical.rst:123
msgid ""
"Pricing Model: 0.5% Processing Fee (https://www.coinpayments.net/help-"
"fees)"
msgstr ""

#: ../../merchants/technical.rst:125
msgid "Documentation: https://www.coinpayments.net/apidoc"
msgstr ""

#: ../../merchants/technical.rst:128
msgid "Mycryptocheckout"
msgstr ""

#: ../../merchants/technical.rst:135
msgid "https://mycryptocheckout.com/"
msgstr ""

#: ../../merchants/technical.rst:137
msgid "Accept cryptocurrency payments for WordPress."
msgstr ""

#: ../../merchants/technical.rst:139
msgid "0% transaction fees"
msgstr ""

#: ../../merchants/technical.rst:140
msgid "Peer-to-peer payments"
msgstr ""

#: ../../merchants/technical.rst:141
msgid "Use any crypto wallet you want"
msgstr ""

#: ../../merchants/technical.rst:142
msgid "No KYC or product restrictions"
msgstr ""

#: ../../merchants/technical.rst:143
msgid "Accept 93+ coins"
msgstr ""

#: ../../merchants/technical.rst:146
msgid "Anypay"
msgstr ""

#: ../../merchants/technical.rst:153
msgid "https://anypay.global/"
msgstr ""

#: ../../merchants/technical.rst:155
msgid "Anypay is Fast, Private, No-Fees, Multi-coin Point of Sale."
msgstr ""

#: ../../merchants/technical.rst:162
msgid "SDK Resources"
msgstr ""

#: ../../merchants/technical.rst:164
msgid ""
"SDKs (Software Development Kits) are used to accelerate the design and "
"development of a product for the SmartCash Network. These resources can "
"either be used to interface with an API provider or for the creation of "
"standalone applications by forming transactions and/or performing various"
" wallet services."
msgstr ""

#: ../../merchants/technical.rst:172
msgid "SmartCash Developer Guide"
msgstr ""

#: ../../merchants/technical.rst:179 ../../merchants/technical.rst:197
msgid "https://github.com/SmartCash/Core-Smart"
msgstr ""

#: ../../merchants/technical.rst:181
msgid ""
"The SmartCash Developer Guide aims to provide the information you need to"
" understand SmartCash and start building SmartCash-based applications. To"
" make the best use of this documentation, you may want to install the "
"current version of SmartCash Core, either from source or from a pre-"
"compiled executable."
msgstr ""

#: ../../merchants/technical.rst:187
msgid "Documentation: https://github.com/SmartCash/Core-Smart"
msgstr ""

#: ../../merchants/technical.rst:190
msgid "SmartCard SDK"
msgstr ""

#: ../../merchants/technical.rst:199
msgid "Easy create your smartcard from your website"
msgstr ""

#: ../../merchants/technical.rst:201
msgid "Open with button click - Auto Open False"
msgstr ""

#: ../../merchants/technical.rst:208
msgid "Open on page load - Auto Open True"
msgstr ""

#: ../../merchants/technical.rst:216
msgid "Add CSV to zip - Generate CSV True"
msgstr ""

#: ../../merchants/technical.rst:226
msgid "Python: python-smartcashrpc"
msgstr ""

#: ../../merchants/technical.rst:228
msgid "https://github.com/leoreinaux/python-smartcashrpc"
msgstr ""

#: ../../merchants/technical.rst:230
msgid ""
"python-smartcashrpc AuthServiceProxy is an improved version of python-"
"jsonrpc."
msgstr ""

#: ../../merchants/technical.rst:232
msgid "sends Basic HTTP authentication headers."
msgstr ""

#: ../../merchants/technical.rst:233
msgid ""
"parses all JSON numbers that look like floats as Decimal, and serializes "
"Decimal values to JSON-RPC connections."
msgstr ""

#: ../../merchants/technical.rst:234
msgid ""
"Documentation: https://github.com/leoreinaux/python-"
"smartcashrpc/blob/master/README.rst"
msgstr ""

#: ../../merchants/technical.rst:235
msgid "Repository: https://github.com/leoreinaux/python-smartcashrpc"
msgstr ""

#: ../../merchants/technical.rst:239
msgid "PHP: Bitcoin-PHP"
msgstr ""

#: ../../merchants/technical.rst:241
msgid "https://github.com/Bit-Wasp/bitcoin-php"
msgstr ""

#: ../../merchants/technical.rst:243
msgid ""
"Bitcoin-PHP is an implementation of Bitcoin with support for SmartCash "
"using mostly pure PHP."
msgstr ""

#: ../../merchants/technical.rst:246
msgid "Platform: PHP"
msgstr ""

#: ../../merchants/technical.rst:247
msgid ""
"Documentation: https://github.com/Bit-Wasp/bitcoin-"
"php/blob/master/doc/Introduction.md"
msgstr ""

#: ../../merchants/technical.rst:248
msgid "Repository: https://github.com/Bit-Wasp/bitcoin-php"
msgstr ""

#: ../../merchants/technical.rst:251
msgid "Python: PyCoin"
msgstr ""

#: ../../merchants/technical.rst:253
msgid "https://github.com/richardkiss/pycoin"
msgstr ""

#: ../../merchants/technical.rst:255
msgid ""
"PyCoin is an implementation of a bunch of utility routines that may be "
"useful when dealing with Bitcoin and SmartCash. It has been tested with "
"Python 2.7, 3.6 and 3.7."
msgstr ""

#: ../../merchants/technical.rst:259
msgid "Platform: Python"
msgstr ""

#: ../../merchants/technical.rst:260
msgid "Documentation: https://pycoin.readthedocs.io/en/latest/"
msgstr ""

#: ../../merchants/technical.rst:261
msgid "Repository: https://github.com/richardkiss/pycoin"
msgstr ""

#: ../../merchants/technical.rst:264
msgid ".NET: NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:271
msgid "https://github.com/MetacoSA/NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:273
msgid ""
"NBitcoin is the most complete Bitcoin library for the .NET platform, and "
"has been patched to include support for SmartCash. It implements all most"
" relevant Bitcoin Improvement Proposals (BIPs) and SmartCash Improvement "
"Proposals (DIPs). It also provides low level access to SmartCash "
"primitives so you can easily build your application on top of it."
msgstr ""

#: ../../merchants/technical.rst:279
msgid "Platform: .NET"
msgstr ""

#: ../../merchants/technical.rst:280
msgid ""
"Documentation: "
"https://programmingblockchain.gitbooks.io/programmingblockchain/content/"
msgstr ""

#: ../../merchants/technical.rst:281
msgid "Repository: https://github.com/MetacoSA/NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:284
msgid "BlockCypher"
msgstr ""

#: ../../merchants/technical.rst:291
msgid "https://www.blockcypher.com"
msgstr ""

#: ../../merchants/technical.rst:293
msgid "BlockCypher also offers client SDKs."
msgstr ""

#: ../../merchants/technical.rst:295
msgid "Platform: Ruby, Python, Java, PHP, Go, NodeJS"
msgstr ""

#: ../../merchants/technical.rst:296
msgid ""
"Repositories: https://www.blockcypher.com/dev/SmartCash/#blockcypher-"
"supported-language-sdks"
msgstr ""

#: ../../merchants/technical.rst:299
msgid "GoCoin"
msgstr ""

#: ../../merchants/technical.rst:306
msgid "https://gocoin.com"
msgstr ""

#: ../../merchants/technical.rst:308
msgid "Platform: JavaScript, PHP, Java, Ruby, .NET, Python"
msgstr ""

#: ../../merchants/technical.rst:309
msgid "Repositories: https://gocoin.com/docs"
msgstr ""

#: ../../merchants/technical.rst:313
msgid "InstantPay"
msgstr ""

#: ../../merchants/technical.rst:315
msgid ""
"InstantPay is a feature provided by the SmartCash network that allows for"
" 0-confirmation transactions to be safely accepted by Merchants and other"
" service providers. Secured by the Smartnode Network, this mechanism "
"eliminates the risk of a “Double Spend” by locking transaction inputs for"
" a given transaction at a protocol level."
msgstr ""

#: ../../merchants/technical.rst:323
msgid "InstantPay Transactions vs. Standard Transactions"
msgstr ""

#: ../../merchants/technical.rst:325
msgid ""
"From an integration perspective there are only minor differences between "
"an InstantPay Transaction and a Standard Transaction. Both transaction "
"types are formed in the same way and are signed using the same process; "
"the key difference is the fee structure and input requirements for "
"InstantPay."
msgstr ""

#: ../../merchants/technical.rst:331
msgid ""
"Fee Structure: InstantPay utilizes a “per-input” fee of 0.001 SmartCash "
"per Input."
msgstr ""

#: ../../merchants/technical.rst:333
msgid ""
"Input Requirements: All inputs for an InstantPay transaction must have at"
" least 2 confirmations."
msgstr ""

#: ../../merchants/technical.rst:336
msgid ""
"Amount: Total amount InstantPay limits the total coins that can be locked"
" in a transaction to %1 SMART and must less than 100k.  You may need to "
"use a normal transaction to split large deposits before you can send with"
" InstantPay."
msgstr ""

#: ../../merchants/technical.rst:339
msgid ""
"In the event that a given transaction does not meet both criteria it will"
" revert to a standard transaction."
msgstr ""

#: ../../merchants/technical.rst:343
msgid "Receiving InstantPay Transactions"
msgstr ""

#: ../../merchants/technical.rst:345
msgid ""
"InstantPay transactions are handled in the same way as a Standard "
"Transaction, typically through JSON-RPC, Insight API, or an internal "
"notification script / service that is configured at a server level."
msgstr ""

#: ../../merchants/technical.rst:349
msgid ""
"JSON-RPC: The following RPC commands will include InstantPay-related "
"information. Within the response you’ll find an “InstantLock” field the "
"status of a given Transaction. This true/false (boolean) value will "
"indicate whether an InstantPay has been observed."
msgstr ""

#: ../../merchants/technical.rst:355
msgid ""
"Insight API: Insight API can be used to detect InstantPay transactions "
"and to push notifications to clients using WebSockets. The API can also "
"be manually polled to retrieve Transaction information including "
"InstantPay status."
msgstr ""

#: ../../merchants/technical.rst:361
msgid "Broadcasting InstantPay Transactions"
msgstr ""

#: ../../merchants/technical.rst:363
msgid ""
"InstantPay Transactions can be constructed and broadcast using an "
"approach similar to Standard Transactions. Provided the InstantPay Fee "
"Structure and Input Requirements are met, an InstantPay can be broadcast "
"using JSON-RPC or Insight API as a Raw Transaction."
msgstr ""

#: ../../merchants/technical.rst:368
msgid ""
"JSON-RPC: The “SendRawTransaction” RPC command can be utilized to "
"broadcast a raw transaction using InstantPay. When utilizing this command"
" be sure to set both optional parameters as “true”"
msgstr ""

#: ../../merchants/technical.rst:372
msgid ""
"``sendrawtransaction \"hexstring\" ( allowhighfees InstantPay )`` "
"``sendrawtransaction \"hexstring\" true true``"
msgstr ""

#: ../../merchants/technical.rst:375 ../../merchants/technical.rst:381
msgid "More Information: https://github.com/SmartCash/Core-Smart/"
msgstr ""

#: ../../merchants/technical.rst:377
msgid ""
"Insight API: Raw Transactions can also be broadcast as an InstantPay "
"using Insight API. In this case all that is required is to POST the raw "
"transaction using the ``/tx/sendix`` route."
msgstr ""

#: ../../merchants/technical.rst:384
msgid "Additional Resources"
msgstr ""

#: ../../merchants/technical.rst:386
msgid ""
"The following resources provide additional information about InstantPay "
"and are intended to help provide a more complete understanding of the "
"underlying technologies."
msgstr ""

#: ../../merchants/technical.rst:391
msgid "Vending Machines"
msgstr ""

#: ../../merchants/technical.rst:395
msgid "Price Tickers"
msgstr ""

#: ../../merchants/technical.rst:397
msgid ""
"You can add a simple price ticket widget to your website using the simple"
" `code snippet generator from CoinGecko "
"<https://www.coingecko.com/en/coins/smartcash/widgets#panel>`_."
msgstr ""

#: ../../merchants/technical.rst:408
msgid "QR Codes"
msgstr ""

#: ../../merchants/technical.rst:410
msgid ""
"Many wallets are capable of generating QR codes which can be scanned to "
"simplify entry of the SmartCash address. Printing these codes or posting "
"the on your website makes it easy to receive payment and tips in "
"SmartCash, both online and offline."
msgstr ""

#: ../../merchants/technical.rst:415
msgid ""
"In SmartCash NodeClient, go to the **Receive** tab, generate an address "
"if necessary, and double-click it to display a QR code. Right click on "
"the QR code and select **Save Image** to save a PNG file."
msgstr ""

#~ msgid ""
#~ "Accept cryptocurrency payments for WordPress."
#~ " * 0% transaction fees * Peer-"
#~ "to-peer payments * Use any crypto "
#~ "wallet you want * No KYC or "
#~ "product restrictions * Accept 93+ coins"
#~ msgstr ""

